<% include ../head %>

<div id="featurePanel" class="featurePanel hidden-xs">
    <div id="searchResults" class="alert alert-success alert-dismissable" style="display:none">
        <button type="button" class="close">&times;</button>
        <span class="text">a</span>
    </div>
    <div class="featureList" id="featureList">
    </div>
</div>
<div id="map" class="fillMap"></div>

<% include ../jqueryScripts %>
<% include ../leafletScripts %>
<script src="/historicdistricts/list"></script>
<!-- <script src="/historicsites/list"></script> --><!-- ?random=500 -->

<!-- Modal -->
<div class="modal fade" id="sitePopupModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
        <h4 class="modal-title"><span id="myModalLabel">Modal title</span> <span id="draftFlag" class="pull-right label label-danger"></span></h4>
      </div>
      <div class="modal-body">
        ...
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
        <a href="" class="modal-view-btn btn btn-primary">View Details</a>
      </div>
    </div><!-- /.modal-content -->
  </div><!-- /.modal-dialog -->
</div><!-- /.modal -->
<script>
    var map;
    $(function(){
        map = L.map('map');

        var osmLayer = L.tileLayer('http://{s}.tile.osm.org/{z}/{x}/{y}.png', {
            attribution: '&copy; <a href="http://osm.org/copyright">OpenStreetMap</a> contributors'
        });

        var esriStreets = L.esri.basemapLayer("Streets").addTo(map);
        var esriImagryWithLabels = L.layerGroup([L.esri.basemapLayer("Imagery"), L.esri.basemapLayer("ImageryLabels"), L.esri.basemapLayer("ImageryTransportation")]);        
        var mapquestUrl = 'http://{s}.mqcdn.com/tiles/1.0.0/sat/{z}/{x}/{y}.png';
        var subDomains = ['otile1', 'otile2', 'otile3', 'otile4'];
        var mapquestAttrib = 'Tiles Courtesy of <a href="http://www.mapquest.com/" target="_blank">MapQuest</a> <img src="http://developer.mapquest.com/content/osm/mq_logo.png">';
        var mapquest = new L.TileLayer(mapquestUrl, {maxZoom: 18, attribution: mapquestAttrib, subdomains: subDomains});
        var searchResultsLyr = L.layerGroup();
        var dbItems = L.geoJson(null /*placesGeoJson*/, {
                            onEachFeature: function (feature, layer) {
                                setClickHandlerForSites (feature, layer);
                            }
                        });
        var historicDistricts = L.geoJson(districtsGeoJson);
        var itemClusters = L.markerClusterGroup({
            disableClusteringAtZoom: 18,
            iconCreateFunction: function (cluster) {
                var childCount = cluster.getChildCount();

                var c = ' marker-cluster-';
                if (childCount < 5) {
                    c += 'small';
                } else if (childCount < 7) {
                    c += 'medium';
                } else {
                    c += 'large';
                }

                return new L.DivIcon({ html: '<div><span>' + childCount + '</span></div>', className: 'marker-cluster' + c, iconSize: new L.Point(40, 40) });
            }
        });
        //itemClusters.addLayer(dbItems);

        var rawDBItems = [];
        var drawnItems = new L.FeatureGroup().addTo(map);

        var baseLayers = {
            "ESRI Streets": esriStreets,
            "OSM Streets": osmLayer,
            "ESRI Satalite": esriImagryWithLabels,
            "MapQuest Satalite": mapquest
        };

        var overlays = {
            "Historic Places": itemClusters,
            "Single Points": dbItems,
            "Historic Districts": historicDistricts
        };

        var defaultLayer = "Historic Places";
        overlays[defaultLayer].addTo(map);

        L.control.layers(baseLayers, overlays).addTo(map);

        loadSitesIntoMap();
        map.on('moveend', function(e) {
            refreshList(function () {
                lazyLoadPlaceImages();
            });
        });

        map.on('baselayerchange', function(e) {
            if (e.layer.options) {map.options.maxZoom = e.layer.options.maxZoom;}
            else {map.options.maxZoom = 19;};
        });

        map.on('overlayadd', function(e) {            
            var layerName = e.name;
            if (layerName == defaultLayer) {clearSearchResults();};
        });

        map.on('overlayremove', function(e) {
        });

        $('button.searchBtn').click(onSearchSites);
        $('.searchField').keypress(function(event){
            if (event.keyCode == 10 || event.keyCode == 13) {
                $(event.currentTarget).parent().parent().find('button.searchBtn').click();
                event.preventDefault();
            }
        });

        $("#searchResults .close").click(clearSearchResults);
        $("a.thematicTour").click(showThematicTour);

        map.fitBounds([[40.80752406374204, -124.15338277816771], [40.79766473467089, -124.17550563812254]]);
        //map.fitBounds([[40.79464126562503, -124.18081641197203],[40.79596113137117, -124.17631030082701]]);//no places test view
        
        lazyLoadPlaceImages();
        
        function showThematicTour (event) {
            event.preventDefault();

            $.ajax({
                dataType: "json",
                url: '/sites/ThematicTour/' + $(this).text(),
                success: function(data){                    
                    //searchResultsLyr
                    var results = data;
                    showSiteResults(results, 'thematic tour sites');
                }
            });
        }

        function setClickHandlerForSites (feature, layer) {
            //layer.setIcon('http://placehold.it/100X100');
            setPlaceIcon(feature, layer);
            var listIetmTemplate = '';
            var imageHtml = '';
            if (feature.properties.ImageURL) {
                // imageHtml = '<div class="featureListThumbWrapper"><div data-src="' + feature.properties.ImageURL + '" class="imagePlaceHolder"><i class="fa fa-camera"></i></div></div>';
                imageHtml = '<div class="featureListThumbWrapper"><img class="featureThumb lazy" data-original="' + feature.properties.ImageURL + '"></div>';
            } else {                                    
                imageHtml = '<div class="noImageAvailable"><i class="fa fa-camera"></i></div>';
            };
            listIetmTemplate += '<div style="display:none;" class="siteTile" data-id="' + feature.properties._id + '" id="ListItem_' + feature.properties._id + '"><div class="col-md-6"><figure class="thumbnail">' + imageHtml + '<figcaption style="font-size: 8pt;">' + feature.properties.Name + '</figcaption></figure></div></div>';
            $('div#featureList').append(listIetmTemplate);
            $('#ListItem_' + feature.properties._id).click(handlePlaceTileClick);
            layer.on('click', popupPlaceDetails);
        };

        function onSearchSites (event) {
            searchVal = $(event.currentTarget).parent().find('.searchField').val();
            $('.searchField').val(searchVal);
            searchSites(searchVal);
        }

        function clearSearchResults (event) {
            $("#searchResults").hide();
            map.removeLayer(searchResultsLyr);
            overlays[defaultLayer].addTo(map);
            refreshList(function () {
                // body...
            });
        }

        function searchSites (value) {
            map.removeLayer(searchResultsLyr);
            if (!value) {
                handlePlaceTileClick();
                clearSearchResults();
                return;
            };
            $.ajax({
                dataType: "json",
                url: '/sites/TextSearch/' + value,
                success: function(data){                    
                    //searchResultsLyr
                    var results = data.results;
                    showSiteResults(results);
                }
            });
        }

        function showSiteResults (results, resultsTitle) {
            searchResultsLyr.clearLayers();
            for (var i = 0; i < results.length; i++) {
                var result = results[i];
                var _id = result.obj._id;
                var siteLayers = $.grep(dbItems.getLayers(), function( layer ) {
                    var feature = layer.feature;
                    return feature.properties._id == _id;
                });

                searchResultsLyr.addLayer(L.geoJson(siteLayers[0].toGeoJSON(), {
                    onEachFeature: function (feature, layer) {
                        setClickHandlerForSites (feature, layer);
                    }
                }));
            };

            $("#searchResults").show().find(".text").text(results.length + (resultsTitle ? ' ' + resultsTitle + ' found.' : " search results found."));
            handlePlaceTileClick();
            if (results.length > 0) {
                //overlays
                var visLayers = getVisiableOverlays();
                for (var i = 0; i < visLayers.length; i++) {
                    var l = visLayers[i];
                    map.removeLayer(l);
                };
                searchResultsLyr.addTo(map);
                $(".siteTile").hide();

                $.each(searchResultsLyr.getLayers(),function(index,value){
                    //find the corresponding tile
                    var feature = value.getLayers()[0].feature;
                    var tile = $("div#featureList div#ListItem_" + feature.properties._id)[0];
                    if ($(tile).css("display") == "none") {$(tile).stop().show();}
                    else if ($(tile).css("display") != "none") {$(tile).stop().hide();};
                });
            } else {
                overlays[defaultLayer].addTo(map);
                refreshList(function () {
                    // body...
                });
            };
        }

        function setPlaceIcon (feature, layer, color) {
            var icon = L.AwesomeMarkers.icon({
                icon: '',
                prefix: 'fa',
                markerColor: 'blue'
            });
            if (!color) {
                if (feature.properties.Status == 'Draft') {icon.options.markerColor = 'darkgreen'}
                else if (feature.properties.Status == 'Pending Review') {icon.options.markerColor = 'orange'};
            } else {
                icon.options.markerColor = color;
            };
            if (!feature.properties.Complete) {icon.options.icon = 'fa-question-circle'};
            
            layer.setIcon(icon);
        }

        function lazyLoadPlaceImages () {
            // $('.imagePlaceHolder').each(function (index, element) {
            //     var src = element.dataset.src;
            //     $(element).html('<img class="featureThumb" src="' + src + '">');
            //     $(element).removeClass('imagePlaceHolder');
            // });
            $("img.lazy").lazyload({
                 container: $("#featurePanel")
            });
        }

        function handlePlaceTileClick (event) {
            if (!event) {
                $.each(dbItems.getLayers(),function(index,value){
                    var layer = value;
                    var feature = layer.feature;
                    setPlaceIcon(feature, layer);                    
                });
                $("#featureList .currentItem").removeClass("currentItem");
                return;
            };
            var id = $(event.currentTarget).attr('data-id');
            var selectedFeature;
            if (!map.hasLayer(searchResultsLyr)) {
                $.each(dbItems.getLayers(),function(index,value){
                    //find the corresponding tile
                    var layer = value;
                    var feature = layer.feature;
                    if (id == feature.properties._id) {
                        setPlaceIcon(feature, layer, 'red');
                        selectedFeature = feature;
                    } else {
                        setPlaceIcon(feature, layer);
                    };
                });
            } else {
                $.each(searchResultsLyr.getLayers(),function(index,value){
                    //find the corresponding tile
                    var layer = value.getLayers()[0];
                    var feature = layer.feature;
                    if (id == feature.properties._id) {
                        setPlaceIcon(feature, layer, 'red');
                        selectedFeature = feature;
                    } else {
                        setPlaceIcon(feature, layer);
                    };
                });
            };            
            if (selectedFeature) {
                $("#featureList").find(event.currentTarget).prependTo("#featureList");
                $("#featureList .currentItem").removeClass("currentItem");
                $(event.currentTarget).addClass("currentItem");
                $("#featurePanel").scrollTop(0);
                map.setView([selectedFeature.geometry.coordinates[1], selectedFeature.geometry.coordinates[0]], map.options.maxZoom);
            };
        }

        function loadSitesIntoMap () {
            $.ajax({
                dataType: "json",
                url: '/historicsites/list?pure=true',
                success: function(data){                    
                    dbItems.addData(data);
                    itemClusters.addLayer(dbItems);
                    refreshList(function () {
                        lazyLoadPlaceImages();
                    });
                }
            });
        }

        function popupPlaceDetails(event){
            $.ajax({
                dataType: "json",
                url: '/sites/sitePopupData/' + event.target.feature.properties._id + '<%if (random) {%>?random=<%=random%><%};%>',
                success: function(data){                    
                    $("#sitePopupModal #myModalLabel").text(data.Name);
                    if (data.Status != "Published") {
                        // data.Description += '<span class="pull-right label label-danger">Status: ' + data.Status + '</span>'
                        $("#sitePopupModal #draftFlag").text('Status: ' + data.Status);
                    };
                    var imagesHtml = '<br><div class=""><strong>Images:</strong></div><div class="row">';
                    var b = 0;
                    if (b % 4 == 0) { imagesHtml += '<div class="row"></div>'; b = 0;};
                    for (var i = 0; i < data.Files.length; i++) {
                        var file = data.Files[i];
                        if (file.DocumentType != 'Image') continue;
                        if (file.Obsolete) continue;
                        if (!file.Approved) continue;
                        imagesHtml += '<div class="col-md-3 col-sm-3">\
                                        <a href="' + file.URLFolder + '/' + file.FileName + '" data-lightbox="PlaceImages" title="' + file.Caption + ' (Credit: ' + file.Credit + ')">\
                                        <img style="margin-bottom: 5px;" class="thumbnail" src="' + file.URLFolder + '/' + file.ThumbName + '">\
                                    </a></div>';
                        b++;
                    };
                    imagesHtml += '</div>';
                    $("#sitePopupModal .modal-view-btn").attr('href', '/sites/details/' + data._id);
                    
                    $("#sitePopupModal .modal-body").html('\
                        <div class="media">\
                        <div class="media-body">' + (data.Description ? data.Description : '<span style="font-style:italic">No Description Available</span>') + '</div>\
                        ' + (data.Files.length > 0 ? imagesHtml:'') + '\
                    </div>');
                    $('#sitePopupModal').modal();
                }
            });
        };

        function getVisiableOverlays () {
            var output = [];
            for (var property in overlays) {
                var l = overlays[property];
                if (map.hasLayer(l)) {output.push(l)};
            }
            return output;
        }

        function refreshList(next) {
            if ($("#featurePanel").css("display") != "none") {
                if (!map.hasLayer(searchResultsLyr)) {
                    $.each(dbItems.getLayers(),function(index,value){
                        //find the corresponding tile
                        var feature = value.feature;
                        var tile = $("div#featureList div#ListItem_" + feature.properties._id)[0];
                        if (map.getBounds().contains([feature.geometry.coordinates[1], feature.geometry.coordinates[0]])) {
                            //if ($(tile).css("display") == "none") $(tile).stop().fadeIn();
                            if ($(tile).css("display") == "none") $(tile).stop().show();
                        } else {
                            //if ($(tile).css("display") != "none") $(tile).stop().fadeOut(1000);
                            if ($(tile).css("display") != "none") $(tile).stop().hide();
                        }
                    });
                } else {
                    
                };                
                next();
            } else {
                next();
            };            
        }
    });
</script>

<% include ../footer %>